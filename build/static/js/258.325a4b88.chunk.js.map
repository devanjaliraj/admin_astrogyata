{"version":3,"sources":["views/apps/packagemanager/CommissionEdit.js"],"names":["HoroscopeEdit","props","changeHandler1","e","setState","status","target","value","changeHandler","name","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","console","log","swal","history","push","catch","error","product","comision_name","comision_rate","categoryList","productList","get","this","category","data","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","col-sm-6","render","onClick","onSubmit","lg","md","sm","required","type","placeholder","onChange","map","catList","key","_id","proList","productname","style","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/258.325a4b88.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    Col,\r\n    Form,\r\n    Row,\r\n    Input,\r\n    Label,\r\n    Button,\r\n    CustomInput,\r\n\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nimport swal from \"sweetalert\";\r\nexport class HoroscopeEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: \"\",\r\n            comision_name: \"\",\r\n            comision_rate: \"\",\r\n            status: \"\",\r\n        };\r\n        this.state = {\r\n            categoryList: [],\r\n            productList: [],\r\n        };\r\n\r\n    }\r\n    componentDidUpdate() {\r\n\r\n\r\n        axiosConfig\r\n            .get(`/user/productbycategory/${this.state.category}`)\r\n            .then((response) => {\r\n                console.log(response.data.data);\r\n                this.setState({ productList: response.data.data });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.state.category);\r\n        axiosConfig\r\n            .get(`/admin/getproductcalegory`)\r\n            .then((response) => {\r\n                console.log(response.data.data);\r\n                this.setState({ categoryList: response.data.data });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    componentDidMount1() {\r\n        let { id } = this.props.match.params;\r\n        axiosConfig\r\n            .get(`/admin/getOneComision/${id}`)\r\n            .then((response) => {\r\n                console.log(response);\r\n                this.setState({\r\n                    product: response.data.data.product,\r\n                    comision_name: response.data.data.comision_name,\r\n                    comision_rate: response.data.data.comision_rate,\r\n                    status: response.data.data.status\r\n\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    changeHandler1 = (e) => {\r\n        this.setState({ status: e.target.value });\r\n    };\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let { id } = this.props.match.params;\r\n        axiosConfig\r\n            .post(`admin/editComision/${id}`, this.state)\r\n            .then((response) => {\r\n                console.log(response);\r\n                swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n                this.props.history.push(\"/app/packagemanager/Commission\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumbs\r\n                    breadCrumbTitle=\"Add Horoscope Category\"\r\n                    breadCrumbParent=\" home\"\r\n                    breadCrumbActive=\"Edit Horoscope Category\"\r\n                />\r\n                <Card>\r\n                    <Row className=\"m-2\">\r\n                        <Col>\r\n                            <h1 col-sm-6 className=\"float-left\">\r\n                                Edit Horoscope\r\n                            </h1>\r\n                        </Col>\r\n                        <Col>\r\n                            <Route\r\n                                render={({ history }) => (\r\n                                    <Button\r\n                                        className=\" btn btn-danger float-right\"\r\n                                        onClick={() =>\r\n                                            history.push(\"/app/packagemanager/Commission\")\r\n                                        }\r\n                                    >\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <CardBody>\r\n                        <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                            <Row>\r\n                                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                                    <Label>Category Name</Label>\r\n                                    <CustomInput\r\n                                        required\r\n                                        type=\"select\"\r\n                                        name=\"category\"\r\n                                        placeholder=\"Enter Title\"\r\n                                        value={this.state.category}\r\n                                        onChange={this.changeHandler}\r\n                                    >\r\n                                        <option>Select.....</option>\r\n                                        {this.state.categoryList?.map((catList) => (\r\n                                            <option key={catList._id} value={catList._id}>\r\n                                                {catList.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </CustomInput>\r\n                                </Col>\r\n                                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                                    <Label>Product Name</Label>\r\n                                    <CustomInput\r\n                                        required\r\n                                        type=\"select\"\r\n                                        name=\"product\"\r\n                                        placeholder=\"Enter Title\"\r\n                                        value={this.state.product}\r\n                                        onChange={this.changeHandler}\r\n                                    >\r\n                                        <option>Select.....</option>\r\n                                        {this.state.productList?.map((proList) => (\r\n                                            <option key={proList._id} value={proList._id}>\r\n                                                {proList.productname}\r\n                                            </option>\r\n                                        ))}\r\n                                    </CustomInput>\r\n                                </Col>\r\n\r\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                                    <Label>Commission Name</Label>\r\n                                    <Input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        name=\"comision_name\"\r\n                                        placeholder=\"Commission Name\"\r\n                                        value={this.state.comision_name}\r\n                                        onChange={this.changeHandler}\r\n                                    ></Input>\r\n                                </Col>\r\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                                    <Label>Commission Rate</Label>\r\n                                    <Input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        name=\"comision_rate\"\r\n                                        placeholder=\"Enter Commision Rate\"\r\n                                        value={this.state.comision_rate}\r\n                                        onChange={this.changeHandler}\r\n                                    ></Input>\r\n                                </Col>\r\n\r\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                                    <Label className=\"mb-1\">Status</Label>\r\n                                    <div\r\n                                        className=\"form-label-group\"\r\n                                        onChange={(e) => this.changeHandler1(e)}\r\n                                    >\r\n                                        <input\r\n                                            style={{ marginRight: \"3px\" }}\r\n                                            type=\"radio\"\r\n                                            name=\"status\"\r\n                                            value=\"Active\"\r\n                                        />\r\n                                        <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                                        <input\r\n                                            style={{ marginRight: \"3px\" }}\r\n                                            type=\"radio\"\r\n                                            name=\"status\"\r\n                                            value=\"Inactive\"\r\n                                        />\r\n                                        <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                                    <Button.Ripple\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        className=\"mr-1 mb-1\"\r\n                                    >\r\n                                        Save\r\n                                    </Button.Ripple>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default HoroscopeEdit;"],"sourceRoot":""}